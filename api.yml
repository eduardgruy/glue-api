openapi: 3.0.0
info:
  description: This is a blueprint for Glue API, enables remote control and execution of the data replication software Datavard Glue
  version: 4.0.0
  title: Datavard Glue API
  license:
    name: All rights reserved
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
tags:
  - name: Flows
    description: Builds a flow
  - name: Processes
    description: Extraction processes
  - name: Storages
    description: Storage management storages
  - name: Profiles
    description: discover and browse various objects
paths:
  "/flows":
    get:
      tags:
        - Flows
      summary: Returns all flows
      operationId: getAllFlows   
      responses:
        "200":
          description: Successful
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Flow"
    post:
      tags:
        - Flows
      summary: Creates flow
      operationId: createFlow
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Flow"
        description: Flow object that needs to be added to the store
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Flow"
  "/flows/{id}":
    get:
      tags:
        - Flows
      summary: Returns a specific flow
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID of the flow to retrieve
      responses:
        "200":
          description: Successful
          content:
            application/json:
              schema:  
                $ref: "#/components/schemas/Flow"          
        "404":
          description: Not found  
    put:
      tags:
        - Flows
      summary: Overwrites a Flow
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID of the flow to update
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Flow"
        description: Flow object that needs to be added to the store
        required: true          
      responses:
        "201":
          description: Created
        "404":
          description: Not found            
    delete:
      tags:
        - Flows
      summary: Deletes a Flow
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID of the flow to update
      responses:
        "204":
          description: No Content
        "404":
          description: Not found            
        "400":
          description: Error occured            
  "/flows/generate":
    post:
      tags:
        - Flows
      summary: Generates new flows
      operationId: generateFlow
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Flow-generator"
        description: Pipeline object that needs to be added to the store
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Flow"
        "405":
          description: Invalid input

  "/processes":
    get:
      tags:
        - Processes
      summary: Returns all processes
      operationId: getAllProcesses   
      responses:
        "200":
          description: Successful
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Process"
    post:
      tags:
        - Processes
      summary: Creates Process
      operationId: createProcesses
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Process"
        description: Process object that needs to be added to the store
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Process"
  "/process/{id}":
    get:
      tags:
        - Processes
      summary: Returns a specific Process
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID of the Process to retrieve
      responses:
        "200":
          description: Successful
          content:
            application/json:
              schema:  
                $ref: "#/components/schemas/Process"          
        "404":
          description: Not found  
    put:
      tags:
        - Processes
      summary: Overwrites a Process
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID of the Process to update
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Process"
        description: Process object that needs to be added to the store
        required: true          
      responses:
        "201":
          description: Created
        "404":
          description: Not found            
    delete:
      tags:
        - Processes
      summary: Deletes a Process
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID of the Process to update
      responses:
        "204":
          description: No Content
        "404":
          description: Not found            
        "400":
          description: Error occured             
  "/process/{id}/run":
    post:
      tags:
        - Processes
      summary: Runs a specific Process
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID of the Process to retrieve
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Process-run-request"
        description: Process object that needs to be added to the store
        required: true          

      responses:
        "200":
          description: Successful
          content:
            application/json:
              schema:  
                $ref: "#/components/schemas/Process"          
        "404":
          description: Not found  
  "/storages":
    post:
      tags:
        - Storages
      summary: Creates a new storage
      operationId: createStorage
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Storage"
        description: Storage object
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                  $ref: "#/components/schemas/Storage"
    get:
      tags:
        - Storages
      summary: Returns all Storages
      operationId: getAllStorages
      parameters:
        - in: query
          name: storageType
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Storage"
  "/storages/{id}":
    get:
      tags:
        - Storages
      summary: Returns a specific storage
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID of the storage to retrieve
      responses:
        "200":
          description: Successful
          content:
            application/json:
              schema:  
                $ref: "#/components/schemas/Storage"          
        "404":
          description: Not found  
    put:
      tags:
        - Storages
      summary: Overwrites a storage
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID of the storage to update
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Storage"
        description: Storage object
        required: true          
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:  
                $ref: "#/components/schemas/Storage"             
        "404":
          description: Not found            
    delete:
      tags:
        - Storages
      summary: Deletes a storage
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID of the storage to delete
      responses:
        "204":
          description: No content
        "404":
          description: Not found            
        "400":
          description: Error occured         


  "/profiles":
    get:
      tags:
        - Profiles
      summary: Returns all profiles
      responses:
        "200":
          description: successful
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Profile"          
    post:
      tags:
        - Profiles
      summary: Creates a profile
      requestBody:
        content:
          application/json:
            schema:
                $ref: "#/components/schemas/Profile"
        description: Pipeline object that needs to be added to the store
        required: true      
      responses:
        "201":
          description: successful
          content:
            application/json:
              schema:  
                $ref: "#/components/schemas/Profile"                
  "/profiles/{id}":
    get:
      tags:
        - Profiles
      summary: Returns a specific profile
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID of the profile to retrieve
      responses:
        "200":
          description: Successful
          content:
            application/json:
              schema:  
                $ref: "#/components/schemas/Profile"          
        "404":
          description: Not found  
    put:
      tags:
        - Profiles
      summary: Overwrites a profile
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID of the profile to update  
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Profile"
        description: Storage object
        required: true            
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:  
                $ref: "#/components/schemas/Storage"                
        "404":
          description: Not found            
    delete:
      tags:
        - Profiles
      summary: Deletes a profile
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID of the profile to delete
      responses:
        "204":
          description: No content
        "404":
          description: Not found            
        "400":
          description: Error occured            
  "/profile-mapping":
    get:
      tags:
        - Profiles
      description: Returns active profile mapping
      responses:
        "200":
          description: Successful
    post:
      tags:
        - Profiles
      description: Creates a profile mapping
      responses:
        "201":
          description: Created
    put:
      tags:
        - Profiles
      description: Overwrites a profile mapping
      responses:
        "201":
          description: Created
servers:
  - url: "https://localhost:443/glue/api/v1"
security:
  - basicAuth: [] 
components:
  securitySchemes:
    basicAuth:
      scheme: basic
      type: http

  schemas:
    Pipeline:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        description:
          type: string
        source:
          type: string
          description: This system or RFC
        destination:
          type: object
          properties:
            id:
              type: string
              description: Storage ID
            profile:
              type: string
              description: "profile for binary storage, should also include path prefix?"
        number_of_jobs:
          type: integer
        flows:
          type: array
          items:
            $ref: "#/components/schemas/Flow"
    # Flow:
    #   type: object
    #   properties:
    #     id:
    #       type: integer
    #       format: int32
    #     name:
    #       type: string
    #     description:
    #       type: string
    #     datasource:
    #       type: object
    #       properties:
    #         type:
    #           type: string
    #           description: type of source
    #         id:
    #           type: string
    #           description: name of source
    #         properties:
    #           type: object
    #           properties:
    #             delta:
    #               type: string
    #               description: loading strategy
    #               enum:
    #                 - cdc_incremental
    #                 - cdc_merge
    #                 - full_overwrite
    #                 - full_incremental
    #             filter:
    #               type: array
    #               items:
    #                 $ref: "#/components/schemas/SAP_filter"
    #     target:
    #       type: object
    #       properties:
    #         properties:
    #           type: object
    #           properties:
    #             merge:
    #               type: boolean
    #     transformation:
    #       type: object
    #       properties:
    #         currency_conversion:
    #           type: boolean
    #           default: false
    #         data_format:
    #           type: string
    #         mapping:
    #           type: array
    #           items:
    #             type: object
    #             properties:
    #               position:
    #                 type: integer
    #               source_field:
    #                 type: string
    #               target_field:
    #                 type: string
    #               type:
    #                 type: string
    #               length:
    #                 type: integer
    #               transformation:
    #                 type: object
    #                 properties:
    #                   type:
    #                     type: string
    #                     enum:
    #                       - expression
    #                       - ABAP
    #                       - direct
    #                   value:
    #                     type: string
    #         start_routine:
    #           type: string
    #         end_routine:
    #           type: string
    SAP_filter:
      type: object
      properties:
        field:
          type: string
        selopt:
          type: array
          items:
            type: object
            properties:
              sign:
                type: string
                enum:
                  - I
                  - E
              option:
                type: string
                enum:
                  - EQ
              low:
                type: string
              high:
                type: string
    Sync:
      type: object
      properties:
        sync_id:
          type: integer
        status:
          type: string
          enum:
            - running
            - successful
            - failed
            - submited
        start_time:
          type: number
        end_time:
          type: number
        sync_type:
          type: string
          enum:
            - batch
            - streaming
        flow_runs:
          type: array
          items:
            $ref: "#/components/schemas/Flow_run"
    Flow_run:
      type: object
      properties:
        run_id:
          type: integer
        flow:
          type: object
          properties:
            id:
              type: string
            name:
              type: string
        status:
          type: string
        start_time:
          type: integer
        end_time:
          type: integer
        jobs:
          type: array
          items:
            $ref: "#/components/schemas/Job"

    Job:
      type: object
      properties:
        job_id:
          type: integer
        status:
          type: string
        start_time:
          type: integer
        end_time:
          type: integer

    Flow:
      type: object
      properties:
        flow_id:
          type: integer
        components:
          type: array
          items:
            $ref: "#/components/schemas/Ext2Components"

    Ext2Components:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
          enum:
            - glueTable
            - fetcher
            - consumer
            - process
            - queue
        properties:
          type: object
          additionalProperties: {}

    Process:
      type: object
      properties:
        id:
          type: string

    Process-run-request:
      type: object
      properties:
        loadType: 
          type: string
        truncate:
          type: boolean
          default: false
        packageSize:
          type: integer
        variant:
          type: string
        filter:
         $ref: "#/components/schemas/SAP_filter"



    Flow-generator:
      type: object
      properties:
        sourceObjectName:
          type: array
          items:
            type: string
        sourceObjectType:
          type: string
          enum:
            - table/view
            - ADSO
        glueTableSett:
          type: array
          items:
            $ref: "#/components/schemas/GlueTableSett"
        glueQueueSett:
          type: array
          items:
            $ref: "#/components/schemas/GlueQueueSett"
        ext2Sett:
          type: array
          items:
            $ref: "#/components/schemas/Ext2Sett"
      required:
        - sourceObjectName
        - sourceObjectType
        - ext2Sett

    Ext2Sett:
      type: object
      properties:
        id:
          type: integer
        prefix:
          type: string
        suffixFetcher:
          type: string
        suffixConsumer:
          type: string
        suffixProcess:
          type: string
        devclass:
          type: string
        folder:
          type: string
        sourceType:
          type: string
          enum:
            - DDIC
            - GL_TAB
            - QUEUE
        sourceID:
          type: integer
        targetType:
          type: string
          enum:
            - GL_TAB
            - QUEUE
        targetID:
          type: integer
        deltaType:
          type: string
          enum:
            - FULL
            - TRIGGER
        loadType:
          type: string
          enum:
            - F
            - D
            - I
            - L
        keyFieldsFilter:
          type: boolean
          default: false
        noActivation:
          type: boolean
          default: false
        useDeduplication:
          type: boolean
          default: false
        readDelEntries:
          type: boolean
          default: false
        enableMerge:
          type: boolean
          default: false
        applyRoutines:
          type: boolean
          default: false

    GlueQueueSett:
      type: object
      properties:
        id:
          type: integer
        prefix:
          type: string
        suffix:
          type: string
        devclass:
          type: string
        folder:
          type: string
        sourceType:
          type: string
          enum:
            - DDIC
            - GL_TAB
        sourceObj:
          type: integer

    GlueTableSett:
      type: object
      properties:
        id:
          type: integer
        prefix:
          type: string
        suffix:
          type: string
        devclass:
          type: string
        storID:
          type: string
        meaningFields:
          type: boolean
          default: false
        meaningValues:
          type: boolean
          default: false
        glRequest:
          type: boolean
          default: false
        glRequestAsKey:
          type: boolean
          default: false
        folder:
          type: string
        CSVFolderName:
          type: string
        CSVDelimiter:
          type: string
        CSVQuotes:
          type: boolean
        CSVEscaping:
          type: boolean
        CSVHeader:
          type: boolean
        CSVOneFile:
          type: boolean
        CSVCompress:
          type: boolean
        CSVCompressLevel:
          type: integer
        CSVInheriteProfile:
          type: boolean
        CSVProfileName:
          type: string
        CSVChangeTimeField:
          type: string
        CSVDeletionField:
          type: string
    Profile: 
      type: object
      properties:
        profileId:
          type: string
        profileType:
          type: string
        properties:
          type: object
          additionalProperties: {}
    Storage:
      type: object
      properties:
        storageId:
          type: string
        storageType:
          type: string
        properties:
          type: object
          additionalProperties: {}
